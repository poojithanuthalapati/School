<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Password Setup</title>
    <link rel="stylesheet" href="../style/password.css">
</head>
<body>
    <div class="container">
        <h1>Password Setup @ViewBag.UserID</h1>
        <form id="passwordForm" action="/subscription/setpassword" method="post">

            <input type="hidden" id="empUserName" name="empUserName" value=@ViewBag.UserID />
            <div class="form-group">
                <label for="password">New Password</label>
                <input type="password" id="password" name="password" 
                       placeholder="Enter your password" required>
                <div class="requirements">
                    <ul>
                        <li id="length" class="invalid">8-20 characters</li>
                        <li id="alphanumeric" class="invalid">Letters and numbers</li>
                        <li id="uppercase" class="invalid">At least one uppercase letter</li>
                        <li id="special" class="invalid">At least one special character</li>
                    </ul>
                </div>
                <div id="passwordError" class="error"></div>
            </div>
            
            <div class="form-group">
                <label for="confirmPassword">Confirm Password</label>
                <input type="password" id="confirmPassword" 
                       placeholder="Re-enter your password" required>
                <div id="confirmError" class="error"></div>
            </div>
            
            <div class="form-group">
                <input type="submit" value="Submit" id="submitBtn" disabled>
            </div>
        </form>
    </div>

    <script>
        const password = document.getElementById('password');
        const confirmPassword = document.getElementById('confirmPassword');
        const submitBtn = document.getElementById('submitBtn');
        const passwordError = document.getElementById('passwordError');
        const confirmError = document.getElementById('confirmError');
        
        // Password requirements elements
        const lengthReq = document.getElementById('length');
        const alphanumericReq = document.getElementById('alphanumeric');
        const uppercaseReq = document.getElementById('uppercase');
        const specialReq = document.getElementById('special');
        
        // Password validation regex
        const alphanumericRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])/;
        const uppercaseRegex = /[A-Z]/;
        const specialCharRegex = /[!#$%^&*(),.?":{}|<>]/;
        
        function validatePassword() {
            let isValid = true;
            passwordError.style.display = 'none';
            
            // Check length
            if (password.value.length >= 8 && password.value.length <= 20) {
                lengthReq.classList.remove('invalid');
                lengthReq.classList.add('valid');
            } else {
                lengthReq.classList.remove('valid');
                lengthReq.classList.add('invalid');
                isValid = false;
            }
            
            // Check alphanumeric
            if (alphanumericRegex.test(password.value)) {
                alphanumericReq.classList.remove('invalid');
                alphanumericReq.classList.add('valid');
            } else {
                alphanumericReq.classList.remove('valid');
                alphanumericReq.classList.add('invalid');
                isValid = false;
            }
            
            // Check uppercase
            if (uppercaseRegex.test(password.value)) {
                uppercaseReq.classList.remove('invalid');
                uppercaseReq.classList.add('valid');
            } else {
                uppercaseReq.classList.remove('valid');
                uppercaseReq.classList.add('invalid');
                isValid = false;
            }
            
            // Check special character
            if (specialCharRegex.test(password.value)) {
                specialReq.classList.remove('invalid');
                specialReq.classList.add('valid');
            } else {
                specialReq.classList.remove('valid');
                specialReq.classList.add('invalid');
                isValid = false;
            }
            
            return isValid;
        }
        
        function validateConfirmPassword() {
            if (password.value !== confirmPassword.value) {
                confirmError.textContent = 'Passwords do not match';
                confirmError.style.display = 'block';
                return false;
            } else {
                confirmError.style.display = 'none';
                return true;
            }
        }
        
        function validateForm() {
            const isPasswordValid = validatePassword();
            const isConfirmValid = validateConfirmPassword();
            
            submitBtn.disabled = !(isPasswordValid && isConfirmValid);
        }
        
        // Event listeners
        password.addEventListener('input', function() {
            validatePassword();
            validateConfirmPassword();
            validateForm();
        });
        
        confirmPassword.addEventListener('input', function() {
            validateConfirmPassword();
            validateForm();
        });
    </script>
</body>
</html>